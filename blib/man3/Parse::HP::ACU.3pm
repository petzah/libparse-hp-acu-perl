.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Parse::HP::ACU 3pm"
.TH Parse::HP::ACU 3pm "2011-03-20" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Parse::HP::ACU \- Parse the output of HP's hpacucli utility.
.SH "VERSION"
.IX Header "VERSION"
Version 0.03
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Parse::HP::ACU parses the output of \s-1HP\s0's \f(CW\*(C`hpacucli\*(C'\fR utility to allow
programmatic access to the \s-1RAID\s0 configuration information provided by the
hpacucli utility on \s-1HP\s0 ProLiant servers.
.PP
.Vb 1
\&    use Parse::HP::ACU;
\&
\&    my $acu = Parse::HP::ACU\->new();
.Ve
.PP
Run the \f(CW\*(C`hpacucli\*(C'\fR tool directly to query the hardware (requires root):
.PP
.Vb 1
\&    my $controllers = $acu\->parse_config();
.Ve
.PP
Parse a text file created already by running \f(CW\*(C`hpacucli\*(C'\fR tool:
.PP
.Vb 1
\&    my $controllers = $acu\->parse_config_file("foo.txt");
.Ve
.PP
Read from a file descriptor already opened by the program:
.PP
.Vb 1
\&    my $controllers = $acu\->parse_config_fh(\e*STDIN);
.Ve
.SH "SUBROUTINES/METHODS"
.IX Header "SUBROUTINES/METHODS"
.SS "new"
.IX Subsection "new"
Return an instance of the HP::Parse::ACU class that can be used to parse
input in one of several ways.
.SS "parse_config"
.IX Subsection "parse_config"
Attempt to run the hpacucli utility, and parse the output.  This command
actually uses \fIparse_config_fh()\fR after opening a pipe to the relevant command.
.PP
The command that is actually run is approximately:
.Sp
.RS 4
This command requires root access, and Parse::HP::ACU makes no attempt to 
use sudo or any other method to gain root access.  It is recommended to call 
your script which uses this module as root.
.Sp
The \fIparse_config_fh()\fR and \fIparse_config_file()\fR will expect output equivalent
to that from the above command.
.RE
.SS "parse_config_file"
.IX Subsection "parse_config_file"
Open and parse a file containing the output from hpacucli.
.SS "parse_config_fh"
.IX Subsection "parse_config_fh"
Read from the file handle and parse it, returning a hash-of-hashes.
.SH "AUTHOR"
.IX Header "AUTHOR"
Jeremy Cole, \f(CW\*(C`<jeremy at jcole.us>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`bug\-parse\-hp\-acu at rt.cpan.org\*(C'\fR, or through
the web interface at <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Parse\-HP\-ACU>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.
.PP
This module has been tested with at least the following \s-1RAID\s0 controllers:
.Sp
.RS 4
This module has been tested with at least the following \s-1RAID\s0 configurations:
.Sp
.RS 4
Other controllers or configurations may or may not work.  Your feedback is
appreciated in order to further test and refine the parsing code.
.RE
.RE
.RS 4
.RE
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Parse::HP::ACU
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Parse\-HP\-ACU>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Parse\-HP\-ACU>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/Parse\-HP\-ACU>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/Parse\-HP\-ACU/>
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2010 Jeremy Cole.
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of either: the \s-1GNU\s0 General Public License as published
by the Free Software Foundation; or the Artistic License.
.PP
See http://dev.perl.org/licenses/ for more information.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 75:" 4
.IX Item "Around line 75:"
=over should be: '=over' or '=over positive_number'
.IP "Around line 106:" 4
.IX Item "Around line 106:"
You forgot a '=back' before '=head2'
.IP "Around line 369:" 4
.IX Item "Around line 369:"
=over should be: '=over' or '=over positive_number'
.IP "Around line 378:" 4
.IX Item "Around line 378:"
=over should be: '=over' or '=over positive_number'
.IP "Around line 387:" 4
.IX Item "Around line 387:"
You forgot a '=back' before '=head1'
.Sp
You forgot a '=back' before '=head1'
